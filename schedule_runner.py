# schedule_runner.py

import subprocess
import time
from datetime import datetime, timezone

# –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ (UTC): –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00, 06:00, 12:00, 18:00
SCHEDULED_TIMES = ["00:00", "06:00", "12:00", "18:00"]

# –õ–æ–≥–∏
LOG_PREFIX = "[SCHEDULER]"

def log(message):
    now = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M:%S UTC")
    print(f"{LOG_PREFIX} {now} - {message}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –≤—Ä–µ–º—è
def is_scheduled_time():
    current_time = datetime.now(timezone.utc).strftime("%H:%M")
    return current_time in SCHEDULED_TIMES

def run_pipeline():
    log("–ó–∞–ø—É—Å–∫ run_pipeline.py...")
    try:
        result = subprocess.run(["python", "run_pipeline.py"], capture_output=True, text=True, timeout=600)
        log("–í—ã–ø–æ–ª–Ω–µ–Ω–æ run_pipeline.py")
        log(f"[OUTPUT]:\n{result.stdout}")
        if result.stderr:
            log(f"[ERROR]:\n{result.stderr}")
    except subprocess.TimeoutExpired:
        log("‚ùå –û—à–∏–±–∫–∞: run_pipeline.py –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏")
    except Exception as e:
        log(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    log("–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
    while True:
        try:
            if is_scheduled_time():
                log("‚úÖ –í—Ä–µ–º—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º. –ó–∞–ø—É—Å–∫...")
                run_pipeline()
                log("üïí –ó–∞—Å—ã–ø–∞–µ–º –Ω–∞ 60 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞...")
                time.sleep(60)
            else:
                log("‚è≥ –ü–æ–∫–∞ –Ω–µ –≤—Ä–µ–º—è. –ñ–¥—ë–º 15 —Å–µ–∫—É–Ω–¥...")
                time.sleep(15)
        except KeyboardInterrupt:
            log("‚õî –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            break
        except Exception as e:
            log(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
