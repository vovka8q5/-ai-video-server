# schedule_runner.py

import time
import subprocess
from datetime import datetime, timezone

# üïì –í—Ä–µ–º–µ–Ω–∞ –∑–∞–ø—É—Å–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ UTC (24 —á–∞—Å–∞)
SCHEDULED_TIMES = ["00:00", "06:00", "12:00", "18:00"]

def log(message: str):
    """–ü–µ—á–∞—Ç–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ—Ç–∫–æ–π –≤—Ä–µ–º–µ–Ω–∏ –≤ UTC"""
    timestamp = datetime.now(timezone.utc).strftime("[%Y-%m-%d %H:%M:%S UTC]")
    print(f"{timestamp} {message}")

def run_pipeline():
    log("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º run_pipeline.py...")
    try:
        result = subprocess.run(["python", "run_pipeline.py"], capture_output=True, text=True)
        if result.returncode == 0:
            log("‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
        else:
            log(f"‚ùå –û—à–∏–±–∫–∞! –ö–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {result.returncode}")
            log(f"ü™µ STDOUT:\n{result.stdout}")
            log(f"ü™µ STDERR:\n{result.stderr}")
    except Exception as e:
        log(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–∞–π–ø–ª–∞–π–Ω–∞: {str(e)}")

def main():
    log("üü¢ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ...")
    already_ran = set()

    while True:
        now_utc = datetime.now(timezone.utc)
        current_time = now_utc.strftime("%H:%M")

        if current_time in SCHEDULED_TIMES and current_time not in already_ran:
            log(f"üïí –í—Ä–µ–º—è —Å–æ–≤–ø–∞–ª–æ —Å {current_time}. –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ-–ø—Ä–æ—Ü–µ—Å—Å.")
            run_pipeline()
            already_ran.add(current_time)

            if len(already_ran) == len(SCHEDULED_TIMES):
                log("üì¶ –í—Å–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø—É—Å–∫–∞ –∑–∞ –¥–µ–Ω—å –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.")

        if current_time == "00:01":
            already_ran.clear()
            log("üîÅ –ù–æ–≤—ã–π –¥–µ–Ω—å. –°–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ –∑–∞–ø—É—Å–∫–æ–≤.")

        time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

if __name__ == "__main__":
    main()
