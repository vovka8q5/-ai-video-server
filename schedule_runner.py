import schedule
import time
from notifier import send_message
from datetime import datetime, timezone

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è (UTC –≤—Ä–µ–º—è)
SCHEDULE_TIMES = ["20:40"]  # 4 —Ä–∞–∑–∞ –≤ —Å—É—Ç–∫–∏ ["00:00", "06:00", "12:00", "18:00"]
PIPELINE_COMMAND = ["python", "run_pipeline.py"]

def run_pipeline_job():
    try:
        current_time = datetime.now(timezone.utc).strftime("%H:%M")
        send_message(f"‚è∞ –ó–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞ –≤ {current_time} UTC")
        
        result = subprocess.run(
            PIPELINE_COMMAND,
            check=True,
            capture_output=True,
            text=True
        )
        
        if result.returncode == 0:
            send_message("‚úÖ –ü–∞–π–ø–ª–∞–π–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω")
        else:
            send_message(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞ (–∫–æ–¥ {result.returncode}):\n{result.stderr[:1000]}")

    except Exception as e:
        send_message(f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

def main():
    send_message("üöÄ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤–∏–¥–µ–æ –∑–∞–ø—É—â–µ–Ω")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    for time_str in SCHEDULE_TIMES:
        schedule.every().day.at(time_str).do(run_pipeline_job)

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    while True:
        schedule.run_pending()
        time.sleep(60)

if __name__ == "__main__":
    main()
