import schedule
import time
import subprocess
import threading
from notifier import send_message
from datetime import datetime, timezone

SCHEDULE_TIMES = ["21:08"]  # –¢–µ—Å—Ç–æ–≤–æ–µ –≤—Ä–µ–º—è (UTC)
PIPELINE_COMMAND = ["python", "run_pipeline.py"]

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ñ–ª–∞–≥ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —Ä–∞–±–æ—Ç—ã
is_running = True

def run_pipeline_job():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–∞–π–ø–ª–∞–π–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    def worker():
        try:
            current_time = datetime.now(timezone.utc).strftime("%H:%M:%S")
            print(f"\nüî¥ [{current_time}] –°—Ç–∞—Ä—Ç –ø–∞–π–ø–ª–∞–π–Ω–∞...")
            send_message(f"‚è≥ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ –≤ {current_time} UTC")
            
            # –ó–∞–ø—É—Å–∫ —Å —Ç–∞–π–º–∞—É—Ç–æ–º 30 –º–∏–Ω—É—Ç
            result = subprocess.run(
                PIPELINE_COMMAND,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                timeout=1800,
                check=True,
                text=True
            )
            
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ:\n{result.stdout}")
            send_message(f"‚úÖ –í–∏–¥–µ–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ {datetime.now(timezone.utc).strftime('%H:%M:%S')} UTC")
            
        except subprocess.TimeoutExpired:
            error_msg = "‚ùå –ü–∞–π–ø–ª–∞–π–Ω –∑–∞–≤–∏—Å (—Ç–∞–π–º–∞—É—Ç 30 –º–∏–Ω)"
            print(error_msg)
            send_message(error_msg)
        except Exception as e:
            error_msg = f"üî• –û—à–∏–±–∫–∞: {str(e)}"
            print(error_msg)
            send_message(error_msg)

    # –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    thread = threading.Thread(target=worker, daemon=True)
    thread.start()

def main():
    print(f"‚è∞ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (UTC: {datetime.now(timezone.utc).strftime('%H:%M:%S')})")
    send_message("üöÄ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    for time_str in SCHEDULE_TIMES:
        schedule.every().day.at(time_str).do(run_pipeline_job)
        print(f"‚è≥ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ {time_str} UTC")

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π
    try:
        while is_running:
            schedule.run_pending()
            time.sleep(10)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫
            print(f"üîÑ –ê–∫—Ç–∏–≤–µ–Ω (UTC: {datetime.now(timezone.utc).strftime('%H:%M:%S')})", end='\r')
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...")
    finally:
        send_message("üî¥ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    main()
