# schedule_runner.py (—Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
import schedule
import time
import subprocess
from notifier import send_message
from datetime import datetime, timezone

# –¢–ï–°–¢–û–í–û–ï –†–ê–°–ü–ò–°–ê–ù–ò–ï (—Ç–æ–ª—å–∫–æ 00:00 UTC)
SCHEDULE_TIMES = ["20:46"]  # –¢–æ–ª—å–∫–æ –æ–¥–Ω–æ –≤—Ä–µ–º—è –¥–ª—è —Ç–µ—Å—Ç–∞
# SCHEDULE_TIMES = ["00:00", "06:00", "12:00", "18:00"]  # –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ)

PIPELINE_COMMAND = ["python", "run_pipeline.py"]

def run_pipeline_job():
    current_time = datetime.now(timezone.utc).strftime("%H:%M")
    print(f"‚è∞ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞ –≤ {current_time} UTC")
    
    try:
        send_message(f"üß™ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –≤ {current_time} UTC")
        
        # –î–ª—è —Ç–µ—Å—Ç–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        print("üîÑ –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ (10 —Å–µ–∫)...")
        time.sleep(10)
        
        result = subprocess.run(
            PIPELINE_COMMAND,
            check=True,
            capture_output=True,
            text=True
        )
        
        if result.returncode == 0:
            send_message("‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω! –ü–∞–π–ø–ª–∞–π–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            error_msg = result.stderr[:500]
            send_message(f"‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω:\n{error_msg}")

    except Exception as e:
        send_message(f"üî• –¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

def main():
    send_message("üîß –ù–∞—á–∞—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞")
    
    # –î–ª—è —Ç–µ—Å—Ç–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫
    if datetime.now(timezone.utc).hour == 23:  # –ï—Å–ª–∏ —Å–µ–π—á–∞—Å 23:00 UTC
        print("üõ† –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫")
        run_pipeline_job()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    for time_str in SCHEDULE_TIMES:
        schedule.every().day.at(time_str).do(run_pipeline_job)
        print(f"‚è≥ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞ {time_str} UTC")

    while True:
        schedule.run_pending()
        time.sleep(60)

if __name__ == "__main__":
    main()
