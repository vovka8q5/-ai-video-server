import schedule
import time
import subprocess
from notifier import send_message
from datetime import datetime, timezone

SCHEDULE_TIMES = ["21:03"]  # –¢–µ—Å—Ç–æ–≤–æ–µ –≤—Ä–µ–º—è
PIPELINE_COMMAND = ["python", "run_pipeline.py"]

def run_pipeline_job():
    try:
        print(f"\nüî¥ [{datetime.now(timezone.utc)}] –ó–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞...")
        send_message("üîÑ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ")
        
        result = subprocess.run(
            PIPELINE_COMMAND,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            timeout=1800,
            check=True
        )
        
        print(f"‚úÖ –í—ã–≤–æ–¥ –ø–∞–π–ø–ª–∞–π–Ω–∞:\n{result.stdout.decode()}")
        send_message("‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
        
    except subprocess.TimeoutExpired:
        error_msg = "‚ùå –ü–∞–π–ø–ª–∞–π–Ω –ø—Ä–µ–≤—ã—Å–∏–ª 30-–º–∏–Ω—É—Ç–Ω—ã–π –ª–∏–º–∏—Ç"
        print(error_msg)
        send_message(error_msg)
    except Exception as e:
        error_msg = f"üî• –û—à–∏–±–∫–∞: {str(e)}"
        print(error_msg)
        send_message(error_msg)

def main():
    print(f"‚è∞ –°–µ—Ä–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è UTC: {datetime.now(timezone.utc)}")
    send_message("üöÄ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
    
    for time_str in SCHEDULE_TIMES:
        schedule.every().day.at(time_str).do(run_pipeline_job)
        print(f"‚è≥ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω –∑–∞–ø—É—Å–∫ –Ω–∞ {time_str} UTC")

    while True:
        try:
            schedule.run_pending()
            time.sleep(10)
        except Exception as e:
            print(f"üõë –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
            time.sleep(10)

if __name__ == "__main__":
    main()
